@model IEnumerable<MusicShopApplication.Models.Music>

@{
    ViewData["Title"] = "Browse Music";

    // Get distinct genres from the Model
    var distinctGenres = Model.Select(m => m.Genre).Distinct().ToList();

    // Get selected genre from query parameter
    var selectedGenre = ViewContext.HttpContext.Request.Query["selectedGenre"].FirstOrDefault();

    // Get distinct performers based on the selected genre
    var distinctPerformers = Model
        .Where(m => selectedGenre == null || m.Genre == selectedGenre)
        .Select(m => m.Performer)
        .Distinct()
        .ToList();
}

<h1>Browse Music</h1>

<form method="get" action="@Url.Action("Index", "Musics")">
    <div>
        @Html.Label("Filter Performers by Genre: ")
        @Html.DropDownList("selectedGenre", new SelectList(distinctGenres, selectedGenre), new { @class = "form-control" })
        <br />
    </div>

    <div>
        <button type="submit" class="btn btn-primary colorScheme">Select Genre</button>
    </div>
</form>

<br />

@{
    // Get selected genre from query parameter
    var selectedPerformer = ViewContext.HttpContext.Request.Query["selectedPerformer"].FirstOrDefault();
}

@if ((!string.IsNullOrEmpty(selectedGenre) && distinctPerformers.Any()) || (!string.IsNullOrEmpty(selectedPerformer)))
{
    <form method="get" action="@Url.Action("Index", "Musics")">
        <div>
            @Html.Label("Filter Music by Performer: ")
            @Html.DropDownList("selectedPerformer", new SelectList(distinctPerformers), new { @class = "form-control" })
            <br />
        </div>

        <div>
            <button type="submit" class="btn btn-primary colorScheme">Apply Filters</button>
            <a href="@Url.Action("Index", "Musics")" class="btn btn-secondary">Clear</a>
        </div>
    </form>
}

<br />

@if (Model.Any() && !string.IsNullOrEmpty(selectedPerformer))
{
    <table class="table">
        <thead>
            <tr>
                <th>Genre</th>
                <th>Performer</th>
                <th>Song</th>
                <th>Year</th>
                <th>Media</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var musicItem in Model)
            {
                <tr>
                    <td>@musicItem.Genre</td>
                    <td>@musicItem.Performer</td>
                    <td>@musicItem.Song</td>
                    <td>@musicItem.Year</td>
                    <td>@musicItem.MusicOn</td>
                    <td>@string.Format("${0:N2}", musicItem.Price)</td>
                </tr>
            }
        </tbody>
    </table>
}

else if(!string.IsNullOrEmpty(selectedPerformer))
{
    <p>No Music Found.</p>
}


